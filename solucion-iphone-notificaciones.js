const axios = require('axios');

async function diagnosticoiPhone() {
    console.log('üì± DIAGN√ìSTICO ESPEC√çFICO PARA iPHONES\n');
    console.log('=====================================\n');
    
    try {
        // Verificar servidor
        console.log('1Ô∏è‚É£ Verificando servidor...');
        await axios.get('http://localhost:3000/test');
        console.log('‚úÖ Servidor funcionando\n');
        
        // Verificar tokens actuales
        console.log('2Ô∏è‚É£ Verificando tokens actuales...');
        const adminLogin = await axios.post('http://localhost:3000/auth/login', {
            email: 'admin@test.com',
            password: 'admin123'
        });
        
        const empleadoLogin = await axios.post('http://localhost:3000/auth/login', {
            email: 'empleado@test.com',
            password: 'emp123'
        });
        
        console.log('üìä ESTADO ACTUAL:');
        console.log(`üëë Admin token: ${adminLogin.data.usuario.pushToken || 'NO REGISTRADO'}`);
        console.log(`üë§ Empleado token: ${empleadoLogin.data.usuario.pushToken || 'NO REGISTRADO'}\n`);
        
        console.log('üçé PROBLEMAS ESPEC√çFICOS DE iPHONE:');
        console.log('===================================');
        console.log('‚ùå 1. Configuraci√≥n de notificaciones m√°s estricta');
        console.log('‚ùå 2. Permisos de notificaci√≥n por app');
        console.log('‚ùå 3. Modo "No molestar" o "Focus"');
        console.log('‚ùå 4. Configuraci√≥n de Expo Go espec√≠fica');
        console.log('‚ùå 5. iOS requiere certificados espec√≠ficos\n');
        
        console.log('üîß SOLUCI√ìN PASO A PASO PARA iPHONE:');
        console.log('====================================');
        console.log('');
        console.log('üì± PASO 1: CONFIGURAR iPHONE ADMINISTRADOR');
        console.log('------------------------------------------');
        console.log('1. Abrir Expo Go en iPhone');
        console.log('2. ‚ö†Ô∏è  IMPORTANTE: Permitir ubicaci√≥n si se solicita');
        console.log('3. Escanear QR del metro bundler');
        console.log('4. Esperar carga completa (sin errores)');
        console.log('5. Login: admin@test.com / admin123');
        console.log('6. üîî CR√çTICO: Cuando aparezca popup de notificaciones:');
        console.log('   - Tocar "Permitir" (Allow)');
        console.log('   - NO tocar "No permitir" o "Don\'t Allow"');
        console.log('7. üè† Minimizar app (bot√≥n home)');
        console.log('8. ‚úÖ Verificar en Ajustes > Notificaciones > Expo Go:');
        console.log('   - Permitir notificaciones: ON');
        console.log('   - Alertas: ON');
        console.log('   - Sonidos: ON');
        console.log('   - Distintivos: ON\n');
        
        console.log('üì± PASO 2: CONFIGURAR iPHONE EMPLEADO');
        console.log('------------------------------------');
        console.log('1. Abrir Expo Go en iPhone empleado');
        console.log('2. Escanear EL MISMO QR del metro bundler');
        console.log('3. Esperar carga completa');
        console.log('4. Login: empleado@test.com / emp123');
        console.log('5. Mantener app abierta\n');
        
        console.log('‚öôÔ∏è  PASO 3: VERIFICAR CONFIGURACI√ìN iOS');
        console.log('---------------------------------------');
        console.log('En el iPhone ADMINISTRADOR:');
        console.log('1. Ajustes > Notificaciones');
        console.log('2. Buscar "Expo Go"');
        console.log('3. Verificar que est√© activado:');
        console.log('   ‚úÖ Permitir notificaciones');
        console.log('   ‚úÖ Alertas');
        console.log('   ‚úÖ Sonidos');
        console.log('   ‚úÖ Distintivos');
        console.log('   ‚úÖ Mostrar en pantalla de bloqueo');
        console.log('   ‚úÖ Mostrar en centro de notificaciones\n');
        
        console.log('üîÑ PASO 4: VERIFICAR MODO NO MOLESTAR');
        console.log('------------------------------------');
        console.log('1. Deslizar desde esquina superior derecha');
        console.log('2. Verificar que "No molestar" est√© DESACTIVADO');
        console.log('3. Verificar que "Focus" est√© desactivado');
        console.log('4. Si est√° activado, desactivarlo temporalmente\n');
        
        console.log('üß™ PASO 5: PROBAR NOTIFICACIONES');
        console.log('--------------------------------');
        console.log('1. iPhone admin: App en segundo plano');
        console.log('2. iPhone empleado: Crear ingrediente');
        console.log('3. Esperar 5-10 segundos');
        console.log('4. iPhone admin: Deber√≠a recibir notificaci√≥n\n');
        
        console.log('üö® SI A√öN NO FUNCIONA - SOLUCI√ìN AVANZADA:');
        console.log('==========================================');
        console.log('1. üîÑ REINSTALAR EXPO GO:');
        console.log('   - Eliminar Expo Go del iPhone');
        console.log('   - Reinstalar desde App Store');
        console.log('   - Repetir configuraci√≥n\n');
        
        console.log('2. üîß RESETEAR PERMISOS:');
        console.log('   - Ajustes > General > Transferir o restablecer iPhone');
        console.log('   - Restablecer ubicaci√≥n y privacidad');
        console.log('   - Reconfigurar Expo Go\n');
        
        console.log('3. üì∂ VERIFICAR RED:');
        console.log('   - Ambos iPhones en misma WiFi');
        console.log('   - Desactivar datos m√≥viles temporalmente');
        console.log('   - Usar solo WiFi\n');
        
        // Crear ingrediente de prueba
        console.log('üß™ CREANDO INGREDIENTE DE PRUEBA...');
        if (empleadoLogin.data.token) {
            try {
                const ingrediente = await axios.post('http://localhost:3000/ingredientes', {
                    nombre: 'Test iPhone Notificaci√≥n',
                    cantidad: 1,
                    unidad: 'kg'
                }, {
                    headers: {
                        'Authorization': `Bearer ${empleadoLogin.data.token}`,
                        'Content-Type': 'application/json'
                    }
                });
                
                if (ingrediente.data.success) {
                    console.log('‚úÖ Ingrediente creado - Notificaci√≥n enviada');
                    console.log('üì± Revisa el iPhone administrador AHORA');
                    
                    // Limpiar
                    setTimeout(async () => {
                        await axios.delete(`http://localhost:3000/ingredientes/${ingrediente.data.idIngrediente}`, {
                            headers: { 'Authorization': `Bearer ${empleadoLogin.data.token}` }
                        });
                        console.log('üßπ Ingrediente de prueba eliminado');
                    }, 2000);
                }
            } catch (error) {
                console.log('‚ùå Error creando ingrediente de prueba');
            }
        }
        
    } catch (error) {
        console.error('‚ùå Error en diagn√≥stico:', error.message);
    }
}

diagnosticoiPhone(); 